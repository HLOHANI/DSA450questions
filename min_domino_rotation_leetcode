class Solution {
public:
    int minDominoRotations(vector<int>& tops, vector<int>& bottoms) {
        int count1=0,count2=0,count3=0,count4=0;
        int num1=tops[0];
        int num2=bottoms[0];
        for(int i=0;i<tops.size();i++)
        {
            //checking for making top array num1
            if(count1 != INT_MAX )
            {
                if(num1 == tops[i])
                {
                    //do nothing
                }
                else if(num1 == bottoms[i] )
                {
                    count1++;
                }
                else
                    count1=INT_MAX;
            }
            //checking for making bottom array num1
            if(count2 != INT_MAX )
            {
                if(num1 == bottoms[i])
                {
                    //do nothing
                }
                else if(num1 == tops[i] )
                {
                    count2++;
                }
                else
                    count2=INT_MAX;
            }
            //checking for making top array num2
            if(count3 != INT_MAX )
            {
                if(num2 == tops[i])
                {
                    //do nothing
                }
                else if(num2 == bottoms[i] )
                {
                    count3++;
                }
                else
                    count3=INT_MAX;
            }
            //checking for making bottom array num2
            if(count4 != INT_MAX )
            {
                if(num2 == bottoms[i])
                {
                    //do nothing
                }
                else if(num2 == tops[i] )
                {
                    count4++;
                }
                else
                    count4=INT_MAX;
            }
        }
        int res=min(min(count1,count2),min(count3,count4));
        return res == INT_MAX ? -1 : res;
    }
};
