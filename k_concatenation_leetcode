long long int mod= pow(10,9)+7;
int kadans(vector<int>& arr3)
{
    int n=arr3.size();
    int csum=arr3[0];
    int maxsum=arr3[0];
    for(int i=1;i<n;i++)
    {
        if(csum>=0)
        {
            csum=csum+arr3[i];
        }
        else
        {
            csum=arr3[i];
        }
        if(csum>maxsum)
        {
            maxsum=csum;
        } 
    }
    return maxsum;
}
int kadansoftwo(vector<int>& arr2)
{
    vector<int> temp_arr=arr2;
    for(int i=0;i<arr2.size();i++)
    {
        temp_arr.push_back(arr2[i]);
    }
    return kadans(temp_arr);
}
class Solution {
public:
    int kConcatenationMaxSum(vector<int>& arr, int k) {
        long long int sum=0;
        int flag=0;
        for(int i=0;i<arr.size();i++)
        {
            sum=sum+arr[i];
            if(arr[i]>0)
            {
                flag=1;
            }
        }
        if(k==1)
        {
            long long int ans1=(kadans(arr))%mod;
            return ans1;
        }
        else if(sum<0)
        {
            if(flag==1)
            {
                long long int ans2=(kadansoftwo(arr))%mod;
            return ans2;
            }
            else
                return 0;
        }
        else
        {
            long long int ans3=(kadansoftwo(arr)+(k-2)*sum)%mod;
            return ans3;
        }
    }
};
