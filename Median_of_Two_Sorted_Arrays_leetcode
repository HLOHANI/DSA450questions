class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int i=0,j=0;
        double median=0.0;
        vector<int> tempArr;
        while(i < nums1.size() && j < nums2.size())
        {
            if(nums1[i]<=nums2[j])
            {
                tempArr.push_back(nums1[i]);
                i++;
            }
            else
            {
                tempArr.push_back(nums2[j]);
                j++;
            }
        }
        while(i < nums1.size())
        {
            tempArr.push_back(nums1[i]);
            i++;
        }
        while(j < nums2.size())
        {
            tempArr.push_back(nums2[j]);
            j++;
        }
        int n= tempArr.size();
        if(n % 2 == 0)
        {
            median = (double)(tempArr[(n/2)-1]+tempArr[n/2])/(double)2;
        }
        else
        {
            median = tempArr[((n+1)/2)-1];
        }
        return median;
    }
};
